#!/bin/bash
#

RECEPTOR=${1}
LIGAND_DATABASE=${PROJ_DIR}/intermediate_files/prepared_ligand_libraries/${2}
X=${3}
Y=${4}
Z=${5}
OUT_DIR=${6}

for LIGAND in $(cat ${LIGAND_DATABASE}/ligand_list.txt);
do
mkdir ${OUT_DIR}/${LIGAND}
cat > rosetta_runs/ligand_docking_runs/${LIGAND_DOCK_JOB_NAME}/input_files/sbatch_files/${LIGAND}_dock_${RECEPTOR}.sbatch <<EOF
#!/bin/bash
#
#SBATCH --job-name=${LIGAND}_dock
#SBATCH --ntasks=1
#SBATCH --array=1-20
#SBATCH --account=maom0
#SBATCH --nodes=1
#SBATCH --output=docking_slrm.log
#SBATCH --mem-per-cpu=5g
#SBATCH --time=01-12:00:00
#SBATCH --partition=standard
#SBATCH --mail-user=limcaoco@med.umich.edu
#SBATCH --mail-type=END,FAIL
# more robust error handling
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
#load gcc vers 4.8.5
module load gcc/4.8.5
##
## Run ligand_docking
##
JOB_ID=${SLURM_JOB_ID}
TASK_ID=${SLURM_ARRAY_TASK_ID}
LIGAND=${LIGAND}
TARGET=${RECEPTOR}
DATE=${DATE}

${PATH_TO_ROSETTA}/main/source/bin/rosetta_scripts.default.linuxgccrelease \
    -database ${PATH_TO_ROSETTA}/main/database \
    @/home/limcaoco/kcnq_project/bin/Hernandez_dock/options/docking.options\
    -parser:protocol ${PROJ_DIR}/scripts/rosetta_xml_scripts/ligand_dock.xml \
    -in:file:s ${LIGAND_DATABASE}/pdbs/${RECEPTOR}_docking_${LIGAND}.pdb \
    -in:file:extra_res_fa ${LIGAND_DATABASE}/${LIGAND}.params \    
    -
    -run:jran ${JOB_ID} \
    -out:nstruct 500 \
    -out:level 300 \
    -out:prefix ${JOB_ID}_${TASK_ID}_ \
    -out:file:silent ${OUT_DIR}/${LIGAND}/out_files/ldock_${DATE}_${LIGAND}_${TARGET}_${JOB_ID}_${TASK_ID}.out \
    > ${OUT_DIR}/${LIGAND}/ldock_${LIGAND}_${TARGET}_${JOB_ID}_${TASK_ID}.log
##
## creating .err file from STDERR
##
command 2> ${SCRATCH_DIR}/ldock_${JOB_ID}_${TASK_ID}.err
command 1> ${SCRATCH_DIR}/ldock_${JOB_ID}_${TASK_ID}.txt

EOF
done

